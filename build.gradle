plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
}

File getJar(Project project){
    return file(project.projectDir.path + '/build/libs/' + project.name + '-' + project.version + '.jar')
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        compileOnly "org.spigotmc:spigot-api:1.14.2-R0.1-SNAPSHOT"
        compile "org.jetbrains.kotlin:kotlin-reflect:1.3.31"
        compileOnly fileTree(dir: 'lib', includes: ['*.jar'])
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    sourceCompatibility = 12

    repositories {
        mavenCentral()
        
        maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
        maven { url 'https://libraries.minecraft.net/' }
        maven { url 'http://repo.citizensnpcs.co/' }
        maven { url 'https://repo.codemc.org/repository/maven-public/' }
    }

    version '1.0-SNAPSHOT'
    if (project.name.charAt(0).isUpperCase() && project != rootProject) {
        beforeEvaluate {
            copyJar.shouldRunAfter(build)
        }
        
        def jarFile = getJar(project)
        def jarName = getJar(project).name
        println jarFile

        jar {
            from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        }
        clean {
            delete(rootDir.path + '/server/plugins/' + jarName,projectDir.path + '/build',projectDir.path + '/out')
        }
        
        task copyJar(type: Copy)
        configure (copyJar){
            dependsOn build
            from getJar(project)?.path ?: project.rootDir.path + '/build/libs/' + jarName
            into project.rootDir.path + '/server/plugins/'
        }

        dependencies {
            compile project(':pluginBase')
        }
    }
}

group 'com.zhufu.opencraft'
version '1.0-SNAPSHOT'

compileKotlin {
    kotlinOptions.jvmTarget = "12"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "12"
}